-- 東 C蘯･u hﾃｬnh repo GitHub
local RepoBase = "https://raw.githubusercontent.com/hviet2510/NamerPro/main/voxsea-autofarm/src/"

-- 東 Danh sﾃ｡ch module c蘯ｧn load
local Modules = {
    "Orion.lua",         -- UI Library
    "utils.lua",         -- X盻ｭ lﾃｽ d盻ｯ li盻㎡
    "movement.lua",      -- ﾄ進盻「 khi盻ハ di chuy盻ハ
    "enemy-selector.lua" -- Ch盻肱 quﾃ｡i theo level
}

-- 東 Hﾃm t蘯｣i module t盻ｫ GitHub
local LoadedModules = {}
local function LoadModule(name)
    local url = RepoBase .. name
    local success, result = pcall(function()
        return loadstring(game:HttpGet(url))()
    end)
    if success then
        LoadedModules[name] = result
        print("[LOADED] " .. name)
    else
        warn("[FAILED] " .. name .. ": " .. tostring(result))
    end
end

-- 東 T蘯｣i t蘯･t c蘯｣ module
for _, m in ipairs(Modules) do
    LoadModule(m)
end

-- 東 Kh盻殃 t蘯｡o UI Orion
local OrionLib = LoadedModules["Orion.lua"]
local Window = OrionLib:MakeWindow({
    Name = "VoxSea AutoFarm",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "VoxSeaFarm"
})

-- 東 Tab & ch盻ｩc nﾄハg
local TabFarm = Window:MakeTab({
    Name = "Auto Farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

TabFarm:AddToggle({
    Name = "B蘯ｭt/T蘯ｯt AutoFarm",
    Default = false,
    Callback = function(state)
        if state then
            LoadedModules["utils.lua"].StartFarm(LoadedModules, Window)
        else
            LoadedModules["utils.lua"].StopFarm()
        end
    end
})

OrionLib:Init()
